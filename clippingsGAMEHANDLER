    /*GAMEHANDLER
    public static void storyTime() {
        String[] Choices = Player.getRoom().getItemsByType("Book");
        String selectedBook = (String) JOptionPane.showInputDialog(null,
                "Which book would you like to read?",
                "Choose", JOptionPane.QUESTION_MESSAGE,
                null, Choices, Choices[0]);
        readFile(selectedBook);
    }
static void createQuests() {
        Quest fetchQuest = new Quest("Fetch Quest", "Fetch the item from the room", new Item[]{getItemByName("Toy")}, 10, 10, "Fetch", getItemByName("Toy"), getNPCByName("Ms_Sagely"), getRoomByName("Foyer"));
        quests.add(fetchQuest);
        fetchQuest.setType("fetch");
        Quest escortQuest = new Quest("Escort Quest", "Escort the NPC to the room", new Item[]{getItemByName("Toy")}, 10, 10, "Escort", getItemByName("Toy"), getNPCByName("Dawn"), getRoomByName("Foyer"));
        quests.add(escortQuest);
        escortQuest.setType("escort");
        Quest tidyUp = new Quest("Tidy Up", "Clean up the room", new Item[]{getItemByName("Toy")}, 10, 10, "Clean", getItemByName("Toy"), getNPCByName("Ms_Sagely"), getRoomByName("Foyer"));
        quests.add(tidyUp);
        tidyUp.setType("tidyUp");
        npcs.get("Ms_Sagely").setQuest(tidyUp);
    }
    public static void artsCrafts() {
        String Choices[] = Player.getRoom().getItemsByType("Crafts");
        String selectedCraft = (String) JOptionPane.showInputDialog(null,
                "Which craft would you like to do?",
                "Choose", JOptionPane.QUESTION_MESSAGE,
                null, Choices, Choices[0]);
        switch (selectedCraft) {
            case "Painting" -> {
                getGui().display("You paint a picture", "Black");
            }
            case "Drawing" -> {
                getGui().display("You draw a picture", "Black");
            }
            case "Sculpting" -> {
                getGui().display("You sculpt a figure", "Black");
            }
            case "Collage" -> {
                getGui().display("You make a collage", "Black");
            }
            case "Origami" -> {
                getGui().display("You make an origami figure", "Black");
            }
            case "Sewing" -> {
                getGui().display("You sew a patch", "Black");
            }
            case "Knitting" -> {
                getGui().display("You knit a square", "Black");
            }
            case "Crocheting" -> {
                getGui().display("You crochet a circle", "Black");
            }
            case "Beading" -> {
                getGui().display("You make a beaded bracelet", "Black");
            }
            case "Jewelry Making" -> {
                getGui().display("You make a necklace", "Black");
            }
            case "Pottery" -> {
                getGui().display("You make a pot", "Black");
            }
            case "Woodworking" -> {
                getGui().display("You make a birdhouse", "Black");
            }
            case "Metalworking" -> {
                getGui().display("You make a keychain", "Black");
            }
            case "Leatherworking" -> {
                getGui().display("You make a wallet", "Black");
            }
            case "Glassblowing" -> {
                getGui().display("You make a vase", "Black");
            }
            case "Candle Making" -> {
                getGui().display("You make a candle", "Black");
            }
            case "Soap Making" -> {
                getGui().display("You make a bar of soap", "Black");
            }
        }
    }
    public static void giveQuestToPlayer(Quest quest) {
        Quest quest1 = quests.get(quests.indexOf(quest));
        Player.addQuest(quest1);
    }
    public static void educationalGames() {
        String Choices[] = Player.getRoom().getItemsByType("Game");
        String selectedGame = (String) JOptionPane.showInputDialog(null,
                "Which game would you like to play?",
                "Choose", JOptionPane.QUESTION_MESSAGE,
                null, Choices, Choices[0]);
        switch (selectedGame) {
            case "Math" -> {
                getGui().display("You play a math game", "Black");
            }
            case "Reading" -> {
                getGui().display("You play a reading game", "Black");
            }
            case "Science" -> {
                getGui().display("You play a science game", "Black");
            }
            case "History" -> {
                getGui().display("You play a history game", "Black");
            }
            case "Geography" -> {
                getGui().display("You play a geography game", "Black");
            }
            case "Art" -> {
                getGui().display("You play an art game", "Black");
            }
            case "Music" -> {
                getGui().display("You play a music game", "Black");
            }
            case "Physical Education" -> {
                getGui().display("You play a physical education game", "Black");
            }
            case "Health" -> {
                getGui().display("You play a health game", "Black");
            }
            case "Language" -> {
                getGui().display("You play a language game", "Black");
            }
            default -> {
            }
        }
    }
    public static ArrayList<Quest> getQuests() {
        return quests;
    }
    public static void Learning() {
        String Choices[] = {"ABCs", "Numbers", "Shapes", "Colors", "Animals", "Body Parts", "The Calender", "Opposites", "Safety", "Hygiene", "Nutrition"};
        String selectedLearn = (String) JOptionPane.showInputDialog(null,
                "What would you like to learn about?",
                "Choose", JOptionPane.QUESTION_MESSAGE,
                null, Choices, Choices[0]);
        switch (selectedLearn) {
            case "ABCs" -> {
                getGui().display("You study your ABCs", "Black");
            }
            case "Numbers" -> {
                getGui().display("You study your numbers", "Black");
            }
            case "Shapes" -> {
                getGui().display("You study your shapes", "Black");
            }
            case "Colors" -> {
                getGui().display("You study your colors", "Black");
            }
            case "Animals" -> {
                getGui().display("You study animals", "Black");
            }
            case "Body Parts" -> {
                getGui().display("You study body parts", "Black");
            }
            case "The Calender" -> {
                getGui().display("You study the calender", "Black");
            }
            case "Opposites" -> {
                getGui().display("You study opposites", "Black");
            }
            case "Safety" -> {
                getGui().display("You study safety", "Black");
            }
            case "Hygiene" -> {
                getGui().display("You study hygiene", "Black");
            }
            case "Nutrition" -> {
                getGui().display("You study nutrition", "Black");
            }
            default -> {
            }
        }
    }

    public static void puzzles() {
        String Choices[] = Player.getRoom().getItemsByType("Puzzle");
        getGui().display("Which puzzle would you like to do?", "Black");
        for (String Choice : Choices) {
            getGui().display(Choice, "Black");
        }
        String puzzle = getGui().getInput();
        Player.doPuzzle(puzzle);
    }

    public static void language() {
        int outcome = (int) (Math.random() * 100);
        if (outcome < 50) {
            getGui().display("You learned something", "Black");
            Player.setExperience(Player.getExperience() + 1);
            Player.setResilience(Player.getResilience() + 1);

        } else {
            getGui().display("You didn't learn anything.", "Black");
            Player.setResilience(Player.getResilience() - 1);
            Player.setExperience(Player.getExperience() + 2);
        }
    }

    public static Quest getQuest(String questName) {
        for (Quest quest : quests) {
            if (quest.getName().equalsIgnoreCase(questName)) {
                return quest;
            }
        }
        return null;
    }

    public static Quest getQuestByName(String string) {
        for (Quest quest : quests) {
            if (quest.getName().equalsIgnoreCase(string)) {
                return quest;
            }
        }
        return null;
    }
GAMEHANDLER*/