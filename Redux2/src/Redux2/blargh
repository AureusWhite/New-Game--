private JTextArea displayArea;
    private JButton attackButton, defendButton;

    public PawAndProwessDialog(JFrame parent) {
        super(parent, "Paw and Prowess", true); // Make it modal
        initComponents();
    }

    // Initialize the GUI components
    private void initComponents() {
        setSize(400, 300);
        setLocationRelativeTo(null); // Center window
        setLayout(new BorderLayout());

        // Display area for game information
        displayArea = new JTextArea();
        displayArea.setEditable(false);
        displayArea.setFont(new Font("Serif", Font.PLAIN, 16));
        displayArea.setText("Welcome to Paw and Prowess!\n");

        JScrollPane scrollPane = new JScrollPane(displayArea);
        add(scrollPane, BorderLayout.CENTER);

        // Panel for buttons
        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new FlowLayout());

        // Attack button
        attackButton = new JButton("Attack");
        attackButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                performAttack();
            }
        });

        // Defend button
        defendButton = new JButton("Defend");
        defendButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                performDefend();
            }
        });

        // Add buttons to the panel
        buttonPanel.add(attackButton);
        buttonPanel.add(defendButton);

        // Add button panel to the frame
        add(buttonPanel, BorderLayout.SOUTH);

        // Set visibility
        setVisible(true);
    }

    // Perform attack action
    private void performAttack() {
        displayArea.append("You attack the opponent!\n");
        // Logic for attack action can be added here
    }

    // Perform defend action
    private void performDefend() {
        displayArea.append("You defend against the attack!\n");
        // Logic for defend action can be added here
    }

    public static void main(String[] args) {
        // Create the main game window (or any parent window)
        JFrame mainGame = new JFrame("Main Game");
        mainGame.setSize(800, 600);
        mainGame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainGame.setVisible(true);

        // Run the Paw and Prowess dialog from the main game
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PawAndProwessDialog(mainGame);
            }
        });
    }
}